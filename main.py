import argparse  # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
import os  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import sys  # –ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
from datetime import datetime  # –†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º

import eventlog.logger  # –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–∏–∫–∏ –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤
from colorama import Fore, Style, init  # –¶–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å

init(autoreset=True)  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ü–≤–µ—Ç –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ (–≤–∞–∂–Ω–æ!)

# –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
parser = argparse.ArgumentParser(description="–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π ")

# –°–æ–∑–¥–∞—ë–º –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã: add, show, clear
subparsers = parser.add_subparsers(dest="command", required=True)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ add ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
add_parser = subparsers.add_parser(
    "add",
    help="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥",
    description="–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ –∂—É—Ä–Ω–∞–ª –ª–æ–≥–æ–≤ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞, —É—Ä–æ–≤–Ω—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è.",
    epilog="""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python main.py add -t SYSTEM -l INFO -m "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
  python main.py add --type USER --level ERROR --message "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
""",
)
group_add = add_parser.add_argument_group("–∫–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å")

# –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç --type –∏–ª–∏ -t
group_add.add_argument(
    "-t",
    "--type",
    choices=["SYSTEM", "USER", "APP"],
    metavar="TYPE",
    help="–¢–∏–ø —Å–æ–±—ã—Ç–∏—è: SYSTEM | USER | APP",
)

# –ê—Ä–≥—É–º–µ–Ω—Ç —É—Ä–æ–≤–Ω—è –≤–∞–∂–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, INFO, ERROR)
group_add.add_argument(
    "-l",
    "--level",
    choices=["INFO", "WARNING", "ERROR"],
    metavar="LEVEL",
    help="–£—Ä–æ–≤–µ–Ω—å –≤–∞–∂–Ω–æ—Å—Ç–∏: INFO | WARNING | ERROR",
)

# –ê—Ä–≥—É–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
group_add.add_argument("-m", "--message", type=str, help="–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å–æ–±—ã—Ç–∏—è")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ show ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
show_parser = subparsers.add_parser(
    "show",
    help="–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥",
    description="–í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π. –ú–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–µ, —Ç–∏–ø—É, —É—Ä–æ–≤–Ω—é –∏ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.",
    epilog="""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python main.py show
  python main.py show -t USER -l WARNING
  python main.py show --date 2025-07-07 --keyword –æ—à–∏–±–∫–∞
""",
)
group_show = show_parser.add_argument_group("–∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞—Ç—å")

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è
group_show.add_argument(
    "-t",
    "--type",
    choices=["SYSTEM", "USER", "APP"],
    metavar="TYPE",
    help="–¢–∏–ø —Å–æ–±—ã—Ç–∏—è: SYSTEM | USER | APP",
)

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Ä–æ–≤–Ω—é
group_show.add_argument(
    "-l",
    "--level",
    choices=["INFO", "WARNING", "ERROR"],
    metavar="LEVEL",
    help="–£—Ä–æ–≤–µ–Ω—å –≤–∞–∂–Ω–æ—Å—Ç–∏: INFO | WARNING | ERROR",
)

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
group_show.add_argument(
    "-d", "--date", type=str, help="–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD)"
)

# –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
group_show.add_argument(
    "-k", "--keyword", type=str, help="–§–∏–ª—å—Ç—Ä –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ clear ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
clear_parser = subparsers.add_parser(
    "clear",
    help="–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥",
    description="–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
    epilog="""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python main.py clear

‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
""",
)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
args = parser.parse_args()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –æ–±—ä–µ–∫—Ç args

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã show ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if args.command == "show":
    logs = eventlog.logger.read_logs()  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ª–æ–≥-—Ñ–∞–π–ª–∞
    formatted_date = None

    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ—ë –≤ —Ñ–æ—Ä–º–∞—Ç –∏–∑ –ª–æ–≥–æ–≤
    if args.date:
        try:
            user_date = datetime.strptime(
                args.date, "%Y-%m-%d"
            )  # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ–±—ä–µ–∫—Ç datetime
            formatted_date = user_date.strftime("%d.%m.%Y")  # —Ñ–æ—Ä–º–∞—Ç –ª–æ–≥–æ–≤: DD.MM.YYYY
        except ValueError:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π YYYY-MM-DD.")
            sys.exit(1)

    for line in logs:
        parts = line.strip().split(" ", 4)  # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ 5 —á–∞—Å—Ç–µ–π
        date = parts[0]  # 0 ‚Äî –¥–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 05.07.2025)
        time = parts[1]  # 1 ‚Äî –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12:45:30)
        event_type = parts[2]  # 2 ‚Äî —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è (SYSTEM, USER, APP)
        level = parts[3]  # 3 ‚Äî —É—Ä–æ–≤–µ–Ω—å (INFO, WARNING, ERROR)
        message_logs = parts[4] if len(parts) == 5 else ""  # 4 ‚Äî —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

        # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç –∫ —É—Ä–æ–≤–Ω—é –≤–∞–∂–Ω–æ—Å—Ç–∏ (—Ü–≤–µ—Ç + —Å–±—Ä–æ—Å)
        if level == "INFO":
            level_colored = Fore.GREEN + level + Style.RESET_ALL
        elif level == "WARNING":
            level_colored = Fore.YELLOW + level + Style.RESET_ALL
        elif level == "ERROR":
            level_colored = Fore.RED + level + Style.RESET_ALL
        else:
            level_colored = level  # –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è

        timestamp = f"{date} {time}"  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        show_line = True  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç—Ä–æ–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞

        # üìå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è ‚Äî —Å—Ç—Ä–æ–≥–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –∞ –Ω–µ "–≤—Ö–æ–∂–¥–µ–Ω–∏–µ"
        if args.type and args.type != event_type:
            show_line = False

        # üìå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Ä–æ–≤–Ω—é –≤–∞–∂–Ω–æ—Å—Ç–∏
        if args.level and args.level != level:
            show_line = False

        # üìå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –µ—ë)
        if args.date and formatted_date and formatted_date != date:
            show_line = False

        # üìå –§–∏–ª—å—Ç—Ä –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É ‚Äî –∏—â–µ–º –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if args.keyword and args.keyword not in message_logs:
            show_line = False

        # ‚úÖ –ï—Å–ª–∏ –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–æ—à–ª–∏ ‚Äî –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –ª–æ–≥–∞
        if show_line:
            print(
                f"[{timestamp}] [{event_type:<8}] [{level_colored:<8}] {message_logs}"
            )

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã add ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if args.command == "add":
    if args.type and args.level and args.message:
        # –ó–∞–ø–∏—Å—å —Å–æ–±—ã—Ç–∏—è –≤ –ª–æ–≥-—Ñ–∞–π–ª
        eventlog.logger.log_event(args.type, args.level, args.message)
    else:
        print("‚ùóÔ∏è–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ --type, --level –∏ --message")
        sys.exit(1)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã clear ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if args.command == "clear":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ª–æ–≥-—Ñ–∞–π–ª
    if os.path.isfile("eventlog.log"):
        user_in = input("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏? [y/N]")
        user_in = user_in.lower()
        if user_in == "y":
            # –û—á–∏—â–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª (–ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º)
            with open("eventlog.log", "w") as file:
                print(" ‚úÖ –ñ—É—Ä–Ω–∞–ª –æ—á–∏—â–µ–Ω.")
        else:
            print("‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            sys.exit(0)
    else:
        print("‚ö†Ô∏è –ñ—É—Ä–Ω–∞–ª –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω.")
